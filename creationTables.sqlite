//ajouter les langues dans le traductor + type de traudction
CREATE TABLE Wilaya(
    Id INTEGER PRIMARY KEY,
    Nom VARCHAR(30)
);

CREATE TABLE Commune(
    Id INTEGER PRIMARY KEY,
    Nom VARCHAR(30),
    WilayaId INTEGER,
    FOREIGN KEY (WilayaId) REFERENCES Wilaya (Id)
);




CREATE TABLE Utilisateur(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    Nom VARCHAR(30),
    Prenom VARCHAR(30),
    Email VARCHAR(50),
    Password VARCHAR(30),
    WilayaId INTEGER,
    Commune INTEGER,
    Adresse VARCHAR(100),
    Phone INTEGER,
    FOREIGN KEY (WilayaId) REFERENCES Wilaya (Id)
);

CREATE TABLE TraducteurData(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    TraducteurId INTEGER,
    Cv VARCHAR(30),
    Assermetation_doc VARCHAR(30),
    FOREIGN KEY (TraducteurId) REFERENCES Utilisateur (Id)
);

CREATE TABLE Langue(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    Nom VARCHAR(30)
);

CREATE TABLE MaitriseLangue(
    TraducteurId INTEGER,
    LangueId INTEGER,
    PRIMARY KEY(TraducteurId, LangueId),
    FOREIGN KEY (TraducteurId) REFERENCES Utilisateur (Id),
    FOREIGN KEY (LangueId) REFERENCES Langue (Id)
);

CREATE TABLE MaitriseType(
    TraducteurId INTEGER,
    Type VARCHAR(30),
    PRIMARY KEY(TraducteurId, Type),
    FOREIGN KEY (TraducteurId) REFERENCES Utilisateur (Id)
);

CREATE TABLE Faxes(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    fax INTEGER,
    UtilisateurId INTEGER,
    FOREIGN KEY (UtilisateurId) REFERENCES Utilisateur(Id)
);


CREATE TABLE Reference(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    Document VARCHAR(30),
    TraducteurId INTEGER,
    FOREIGN KEY (TraducteurId) REFERENCES Utilisateur (Id)
);

CREATE TABLE Signalement(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    UtilisateurId INTEGER,
    TraducteurId INTEGER,
    Date DATE,
    Cause VARCHAR(1000),
    FOREIGN KEY (UtilisateurId) REFERENCES Utilisateur(Id),
    FOREIGN KEY (TraducteurId) REFERENCES Utilisateur (Id)
);

CREATE TABLE Demande_traduction(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    UtilisateurId INTEGER,
    Nom VARCHAR(30),
    Prenom VARCHAR(30),
    Email VARCHAR(50),
    Adresse VARCHAR(100),
    Phone INTEGER,
    TraducteurId INTEGER,
    LangueO INTEGER,
    LangueD INTEGER,
    Type VARCHAR(30),
    Comment VARCHAR(500),
    Assermente BOOLEAN,
    Document VARCHAR(30),
    Date DATE,
    FOREIGN KEY (UtilisateurId) REFERENCES Utilisateur(Id),
    FOREIGN KEY (TraducteurId) REFERENCES Utilisateur (Id),
    FOREIGN KEY (LangueO) REFERENCES Langue (Id),
    FOREIGN KEY (LangueD) REFERENCES Langue (Id)
);

CREATE TABLE DemandeT_Accepte(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    DemandeId INTEGER,
    TraducteurId INTEGER,
    Prix INTEGER,
    FOREIGN KEY (DemandeId) REFERENCES Demande_traduction (Id),
    FOREIGN KEY (TraducteurId) REFERENCES Utilisateur (Id)
);

CREATE TABLE DemandeT_paiement(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    DemandeId INTEGER,
    Document VARCHAR(30),
    Etat INTEGER,
    FOREIGN KEY (DemandeId) REFERENCES DemandeT_Accepte (Id)
);

CREATE TABLE Traduction_debutee(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    DemandeId INTEGER,
    Date DATE,
    FOREIGN KEY (DemandeId) REFERENCES DemandeT_Accepte (Id)
);

CREATE TABLE Traduction_finie(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    TraductionId INTEGER,
    Date DATE,
    Etat INTEGER,
    FOREIGN KEY (TraductionId) REFERENCES Traduction_debutee (Id)
);


CREATE TABLE Demande_devis(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    UtilisateurId INTEGER,
    Nom VARCHAR(30),
    Prenom VARCHAR(30),
    Email VARCHAR(50),
    Adresse VARCHAR(100),
    Phone INTEGER,
    TraducteurId INTEGER,
    LangueO INTEGER,
    LangueD INTEGER,
    Type VARCHAR(30),
    Comment VARCHAR(500),
    Assermente BOOLEAN,
    Document VARCHAR(30),
    Date DATE,
    FOREIGN KEY (UtilisateurId) REFERENCES Utilisateur(Id),
    FOREIGN KEY (TraducteurId) REFERENCES Utilisateur (Id),
    FOREIGN KEY (LangueO) REFERENCES Langue (Id),
    FOREIGN KEY (LangueD) REFERENCES Langue (Id)
);

CREATE TABLE DemandeD_Accepte(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    DemandeId INTEGER,
    TraducteurId INTEGER,
    Prix INTEGER,
    FOREIGN KEY (DemandeId) REFERENCES Demande_devis (Id),
    FOREIGN KEY (TraducteurId) REFERENCES Utilisateur (Id)
);

CREATE TABLE DemandeD_paiement(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    DemandeId INTEGER,
    Document VARCHAR(30),
    Etat INTEGER,
    FOREIGN KEY (DemandeId) REFERENCES DemandeD_Accepte (Id)
);

CREATE TABLE Devi_debutee(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    DemandeId INTEGER,
    Date DATE,
    FOREIGN KEY (DemandeId) REFERENCES DemandeD_Accepte (Id)
);

CREATE TABLE Devi_finie(
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    TraductionId INTEGER,
    Date DATE,
    Etat INTEGER,
    FOREIGN KEY (TraductionId) REFERENCES Devi_debutee (Id)
);


CREATE TABLE Note (
    TraducteurId INTEGER,
    UtilisateurId INTEGER,
    Valeur INTEGER,
    PRIMARY KEY (TraducteurId, UtilisateurId),
    FOREIGN KEY (TraducteurId) REFERENCES Utilisateur (Id),
    FOREIGN KEY (UtilisateurId) REFERENCES Utilisateur (Id)
);

CREATE TABLE Articles (
    Id INTEGER PRIMARY KEY AUTO_INCREMENT,
    Titre VARCHAR(100),
    Image VARCHAR(30),
    body VARCHAR(1000)
)